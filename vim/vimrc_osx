execute pathogen#infect()
" syntax on
filetype on
filetype plugin indent on
filetype indent plugin on
set modeline
" set tabs to have 4 spaces
" set ts=4
" indent when moving to the next line while writing code
" set autoindent
" expand tabs into spaces
" set expandtab
" when using the >> or << commands, shift lines by 4 spaces
" set shiftwidth=4
" show a visual line under the cursor's current line
set cursorline
"hi cursorline   cterm=NONE ctermbg=darkred ctermfg=white guibg=darkred guifg=white
"hi CursorLineNr   term=bold ctermfg=Yellow gui=bold guifg=Yellow
"hi cursorcolumn cterm=NONE ctermbg=darkred ctermfg=white guibg=darkred guifg=white
"nnoremap <Leader>c :set cursorline! cursorcolumn!<CR>
" Highlight the current line
"set cursorline
autocmd InsertEnter * highlight CursorLine guifg=white guibg=blue ctermfg=white ctermbg=blue
autocmd InsertLeave * highlight CursorLine guifg=white guibg=darkblue ctermfg=white ctermbg=darkblue
"end cursorline
" show the matching part of the pair for [] {} and ()
set showmatch
" enable all Python syntax highlighting features
let python_highlight_all = 1
set textwidth=79  " lines longer than 79 columns will be broken
set shiftwidth=4  " operation >> indents 4 columns; << unindents 4 columns
set tabstop=4     " a hard TAB displays as 4 columns
set expandtab     " insert spaces when hitting TABs
set softtabstop=4 " insert/delete 4 spaces when hitting a TAB/BACKSPACE
set shiftround    " round indent to multiple of 'shiftwidth'
set autoindent    " align the new line indent with the previous line

syntax enable
set background=dark
"set t_Co=16
set number
set ruler
set ignorecase
set smartcase

" solarized options
let g:solarized_visibility = "high"
let g:solarized_contrast = "high"
colorscheme solarized
let g:solarized_termtrans = 1

" golang
let g:golang_goroot = "${HOME}/go"

"Vundle
set nocompatible
set rtp+=~/.vim/bundle/vundle
call vundle#rc()
Bundle 'gmarik/vundle'
Bundle 'VundleVim/Vundle.vim'
Bundle 'altercation/vim-colors-solarized'
Bundle 'rodnaph/vim-color-schemes'
Bundle 'scrooloose/nerdtree'
Bundle 'Lokaltog/vim-powerline'
Bundle 'rjohnsondev/vim-compiler-go'
Bundle 'fatih/vim-go'
Bundle 'dgryski/vim-godef'
Bundle 'hashivim/vim-hashicorp-tools'
Bundle 'fatih/vim-hclfmt'
Bundle 'elzr/vim-json'
Bundle 'tpope/vim-sensible'
Bundle 'juliosueiras/vim-terraform-completion'
Bundle 'vim-perl/vim-perl'
Bundle 'wincent/command-t'
Bundle 'Valloric/YouCompleteMe'

" Below is from learn Puppet VM
" turn off auto adding comments on next line
" so you can cut and paste reliably
" http://vimdoc.sourceforge.net/htmldoc/change.html#fo-table
set fo=tcq
set bg=dark
" set default comment color to cyan instead of darkblue
" which is not very legible on a black background
highlight comment ctermfg=cyan

highlight LiteralTabs ctermbg=darkgreen guibg=darkgreen
match LiteralTabs /\s\  /
highlight ExtraWhitespace ctermbg=darkgreen guibg=darkgreen
match ExtraWhitespace /\s\+$/

" Set up puppet manifest and spec options
au BufRead,BufNewFile *.pp
  \ set filetype=puppet
au BufRead,BufNewFile *_spec.rb
  \ nmap <F8> :!rspec --color %<CR>
au BufRead,BufNewFile *.erb
  \ set filetype=ruby

" Begin powerline
source $HOME/git/dotfiles/vudkapz/dotfiles/vim/.vim/plugin/powerline.vim
set laststatus=2 " Always display the statusline in all windows
set showtabline=2 " Always display the tabline, even if there is only one tab
set noshowmode " Hide the default mode text (e.g. -- INSERT -- below the statusline)
"End powerline
if $VIM_CRONTAB == "true"
    set nobackup
    set nowritebackup
endif
" Below are pep8 settings, if not set above
" au BufNewFile,BufRead *.py
"     \ set tabstop=4
"     \ set softtabstop=4
"     \ set shiftwidth=4
"     \ set textwidth=79
"     \ set expandtab
"     \ set autoindent
"     \ set fileformat=unix
